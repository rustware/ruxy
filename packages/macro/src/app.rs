mod input;

use proc_macro2::{Ident, Span, TokenStream};
use quote::quote;

use ::ruxy_core::util::fs::get_ruxy_out_dir;

use input::AppMacroInput;

pub fn ruxy_app(input: TokenStream) -> Result<TokenStream, TokenStream> {
  let _input: AppMacroInput = input.try_into()?;

  let app_file = get_ruxy_out_dir().join("app.rs");
  
  let Some(app_file) = app_file.to_str() else {
    panic!("couldn't read <out>/.ruxy/app.rs (this file should be generated by the build script)")
  };

  let app_mod_ident = Ident::new("app", Span::mixed_site());
  
  let output = quote! {
    #[path = #app_file]
    mod #app_mod_ident;
    use #app_mod_ident::main;
    
    const _: &str = include_str!(#app_file);
  };

  Ok(output)
}
